module MonitrcParser

  grammar Monitrc

    rule monitrc
      (whitespace / check_process)* {
        def content
          elements.map &:content
        end
      }
    end

    rule check_process
      'check' whitespace 'process' whitespace name check_process_options {
        def content
          CheckProcess.new(name.content, check_process_options.content)
        end
      }
    end

    rule check_process_options
      (whitespace / with_pidfile)* {
        def content
          elements.select { |e| e.content }.inject({}) do |options, option|
            options.merge(option.content) { |key,old,new| [old, new] }
          end
        end
      }
    end

    rule with_pidfile
      'with' whitespace 'pidfile' whitespace pidfile {
        def content
          { :pidfile => pidfile.content }
        end
      }
    end

    rule pidfile
      string
    end

    rule name
      string
    end

    rule whitespace
      [\s]+ {
        def content
        end
      }
    end

    rule string
      quoted_string / bare_string
    end

    rule quoted_string
      '"' [^"]* '"' {
        def content
          text_value[1..-2]
        end
      }
    end

    rule bare_string
      [^\s]+ {
        def content
          text_value
        end
      }
    end

  end

end
